<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>package_feeds_base_wireguard on Opde Issues Tracker</title>
    <link>https://elonh.github.io/opde/x86/64/package_feeds_base_wireguard/</link>
    <description>Recent content in package_feeds_base_wireguard on Opde Issues Tracker</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 25 Feb 2021 14:20:49 +0000</lastBuildDate>
    
	<atom:link href="https://elonh.github.io/opde/x86/64/package_feeds_base_wireguard/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>compile.50</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_wireguard/compile.50/</link>
      <pubDate>Thu, 25 Feb 2021 14:20:49 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_wireguard/compile.50/</guid>
      <description>build number: 50
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/wireguard/compile -j$(nproc) || make package/feeds/base/wireguard/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.99&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/wireguard-linux-compat-1.0.20210124/src/main.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/wireguard-linux-compat-1.0.20210124/src/noise.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/wireguard-linux-compat-1.0.20210124/src/device.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/wireguard-linux-compat-1.0.20210124/src/peer.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/wireguard-linux-compat-1.0.20210124/src/timers.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/wireguard-linux-compat-1.0.20210124/src/queueing.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/wireguard-linux-compat-1.0.20210124/src/send.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/wireguard-linux-compat-1.</description>
    </item>
    
    <item>
      <title>compile.48</title>
      <link>https://elonh.github.io/opde/x86/64/package_feeds_base_wireguard/compile.48/</link>
      <pubDate>Mon, 22 Feb 2021 23:42:08 +0000</pubDate>
      
      <guid>https://elonh.github.io/opde/x86/64/package_feeds_base_wireguard/compile.48/</guid>
      <description>build number: 48
re-implement command docker pull elonh/opde:sdk docker run -it --rm elonh/opde:sdk zsh # or bash export http_proxy= # [your proxy], do not use localhost or 127.0.0.1 export https_proxy=$http_proxy opde feeds &amp;amp;&amp;amp; opde config -a make package/feeds/base/wireguard/compile -j$(nproc) || make package/feeds/base/wireguard/compile V=s Compile.txt make[4]: Entering directory &amp;#39;/openwrt/build_dir/target-x86_64_musl/linux-x86_64/linux-5.4.99&amp;#39; CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/wireguard-linux-compat-1.0.20210124/src/main.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/wireguard-linux-compat-1.0.20210124/src/noise.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/wireguard-linux-compat-1.0.20210124/src/device.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/wireguard-linux-compat-1.0.20210124/src/peer.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/wireguard-linux-compat-1.0.20210124/src/timers.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/wireguard-linux-compat-1.0.20210124/src/queueing.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/wireguard-linux-compat-1.0.20210124/src/send.o CC [M] /openwrt/build_dir/target-x86_64_musl/linux-x86_64/wireguard-linux-compat-1.</description>
    </item>
    
  </channel>
</rss>